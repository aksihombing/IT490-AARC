<?php
session_start(); // starting user session


require_once('rabbitMQLib.inc'); // added, including rabbitmq library

if (!isset($_POST['uname']) || !isset($_POST['pword'])) {
            echo json_encode(["error" => "Missing username or password"]);
            exit(0);
}


$request = $_POST;
$response = "Unsupported Request. Denied!"; // failed request

switch ($request['type'] ?? '') {
    case 'login':
        //creating variables to hold the username and the password
        // Accepts either uname/pword (our AJAX) our username/password just in case
        $username = $request['username'] ?? ($request['uname'] ?? '');
        $password = $request['password'] ?? ($request['pword'] ?? '');

        //If the client returns an empty string for the username or the password, then the login fails

        if ($username === '' || $password === '') {
            $response = "Login Failed: Missing credentials";
            break;
        }

        try {
            // Sending the login request to RabbitMQ on the database listener
            // Im not sure but do we have  to create a request queue and a response queue, this being sent to the request queue, or leave it for simplicity?
            $client   = new rabbitMQClient("testRabbitMQ.ini","testServer");//sending the request to the testServer
            $request   = ['action' => 'login', 'username' => $username, 'password' => $password];//the request array being built
            $response  = $client->send_request($request);  // response 
            //  Building message to send to the RabbitMQ server

            if (is_array($response) && ($response['status'] ?? '') === 'success') { // handling the response back from the rabbit mq server if the login was succesful
                //if the rmq response sent back is an array and the status is success then we set the session variables
                $_SESSION['login']       = true;// setting the session varibables
                $_SESSION['uname']       = $username;
                $_SESSION['session_key'] = $response['session_key'] ?? null;//storing session key if one was returned (it will be created/generated by the db listener)
                
                $response = "Login Success."; 
            } else {//failed login
                $msg = is_array($response) ? ($response['message'] ?? 'Invalid credentials') : 'No response';
                $response = "Login Failed: " . $msg;
            }
        } catch (Exception $e) {
            $response = "Login Failed: " . $e->getMessage();
        }
        break;
}

echo json_encode($response);
exit(0);
